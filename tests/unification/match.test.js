"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const first_order_1 = require("../../src/unification/first_order");
const first_order_match_1 = require("../../src/unification/first_order_match");
const shorthands_1 = require("../../src/lambda_pi/shorthands");
const shorthands_2 = require("../../src/lambda_pi/shorthands");
const and = (x, y) => (0, shorthands_2.flapp)((0, shorthands_2.con)("and"), x, y);
const test_match = (n, ast, clauses, no_matches, out) => test(`first order match ${n}`, () => expect((0, first_order_match_1.first_order_match)(ast, clauses, no_matches)).toEqual(out));
const [a, b, c, d] = (0, shorthands_1.clist)("a", "b", "c", "d");
const [w, x, y, z] = (0, shorthands_1.ovlist)("w", "x", "y", "z");
const [W, X, Y, Z] = (0, shorthands_1.mvlist)("W", "X", "Y", "Z");
test_match("0 clauses return 1", a, [], () => 1, 1);
test_match("0 clauses return 2", a, [], () => 2, 2);
test_match("1 clause no match", a, [(0, first_order_match_1.match_clause)(b, (u) => 2)], () => 1, 1);
test_match("1 clause match", a, [(0, first_order_match_1.match_clause)(a, (u) => 2)], () => 1, 2);
test_match("2 clause no match", a, [(0, first_order_match_1.match_clause)(b, (u) => 2), (0, first_order_match_1.match_clause)(c, (u) => 3)], () => 1, 1);
test_match("2 clause both match", X, [(0, first_order_match_1.match_clause)(b, (u) => 2), (0, first_order_match_1.match_clause)(c, (u) => 3)], () => 1, 2);
test_match("2 clause last match", c, [(0, first_order_match_1.match_clause)(b, (u) => 2), (0, first_order_match_1.match_clause)(c, (u) => 3)], () => 1, 3);
test_match("2 clause return unifier", a, [(0, first_order_match_1.match_clause)(X, (u) => u)], () => (0, first_order_1.mk_default_substitution)([]), (0, first_order_1.mk_default_substitution)([["X", a]]));
